spring:
  # Datasource configuration using environment variables for security.
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      pool-name: HikariCP-Lending
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
      validation-timeout: 5000
      # A connection-init-sql is generally not needed if you have a robust validation-timeout.
      # auto-commit is true by default.

  jpa:
    # Using 'validate' is safer than 'update' in production. It ensures the schema matches the entities without making changes.
    hibernate:
      ddl-auto: validate
    # Disabling SQL logging for performance and to avoid log spam.
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        # Performance tuning for batch operations.
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        generate_statistics: false # Set to true only when actively monitoring performance.

  flyway:
    enabled: true
    # Ensures Flyway runs migrations against the production database.
    baseline-on-migrate: true

# Stricter logging for production.
logging:
  level:
    root: INFO
    com.lending: INFO
    org.springframework.security: WARN
    # Reduce noise from Hibernate in production logs.
    org.hibernate: WARN
  file:
    name: logs/application.log
    max-size: 100MB
    max-history: 30
    total-size-cap: 1GB

server:
  # Enable response compression for better network performance.
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  tomcat:
    # Setting reasonable limits to prevent potential abuse.
    connection-timeout: 30s
    max-http-form-post-size: 2MB
    max-swallow-size: 2MB

# Exposing endpoints for monitoring tools like Prometheus.
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      roles: ACTUATOR
    metrics:
      enabled: true
    prometheus:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99